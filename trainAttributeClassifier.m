function [trainedClassifier, validationAccuracy] = trainAttributeClassifier(datasetTable)
% Extract predictors and response
predictorNames = {'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday', 'Doctors', 'Health', 'Nightlife', 'Active', 'Mini', 'Golf', 'Shopping', 'Home', 'Internet', 'Mobile', 'Professional', 'Electronics', 'Bars', 'American', 'Lounges', 'Restaurants', 'Auto', 'Automotive', 'Contractors', 'Burgers', 'Breakfast', 'Food', 'Grocery', 'Cafes', 'Hotels', 'Event', 'Pubs', 'Irish', 'Local', 'Sewing', 'Dentists', 'General', 'Chinese', 'Gyms', 'Trainers', 'Fitness', 'Italian', 'Periodontists', 'Orthodontists', 'Fast', 'Coffee', 'Arts', 'Knitting', 'Hobby', 'Department', 'Fashion', 'Body', 'Building', 'Hardware', 'Nurseries', 'Arcades', 'Breweries', 'Comedy', 'Videos', 'Books_', 'Bookstores', 'Swimming', 'Mattresses', 'Airport', 'Limos', 'Transportation', 'Pizza', 'Gluten_Free', 'Lingerie', 'Asian', 'Shoe', 'Soup', 'Sandwiches', 'Salad', 'Veterinarians', 'Pets', 'Men_s', 'Formal', 'Discount', 'Seafood', 'Women_s', 'Children_s', 'Sporting', 'Outdoor', 'Sports', 'Bikes', 'Thrift', 'Bakeries', 'Desserts', 'Caterers', 'Tattoo', 'Piercing', 'Beauty', 'Flowers', 'Florists', 'Nail', 'Hair', 'Ice', 'Movers', 'Antiques', 'Beer_', 'Pet', 'TapasSmall', 'Drugstores', 'Animal', 'Tires', 'Oil', 'Real', 'Barbeque', 'Furniture', 'Chiropractors', 'Performing', 'Keys', 'Security', 'Specialty', 'Education', 'Cooking', 'Travel', 'Libraries', 'Public', 'Music', 'Appliances', 'Art', 'Dry', 'Tennis', 'Wine', 'Mediterranean', 'Vegetarian', 'Portuguese', 'Museums', 'Landmarks', 'Skin', 'Banks', 'Financial', 'Mortgage', 'Diners', 'Motorcycle', 'Photography', 'German', 'Delis', 'Bed', 'Dive', 'Bistros', 'Cinema', 'Chicken', 'Barbers', 'Hot', 'Kids', 'Stadiums', 'Churches', 'Religious', 'Print', 'Mass', 'Meat', 'Party', 'Polish', 'Greek', 'Reflexology', 'DJs', 'Sushi', 'Japanese', 'Pool', 'Lighting', 'Heating', 'Indian', 'Bowling', 'Printing', 'Office', 'Bridal', 'Used_', 'Mexican', 'Tex_Mex', 'Gas', 'Kitchen', 'Bagels', 'Tours', 'Donuts', 'Flooring', 'Venues', 'Comfort', 'Tapas', 'Cocktail', 'Ethnic', 'Car', 'Wholesale', 'Cosmetics', 'Steakhouses', 'Optometrists', 'Ophthalmologists', 'Eyewear', 'Gay', 'Community', 'Luggage', 'Candy', 'Korean', 'Chocolatiers', 'Massage', 'Cards', 'Fabric', 'Cheese', 'Karaoke', 'Vietnamese', 'Thai', 'Vinyl', 'Newspapers', 'Tanning', 'Gift', 'Middle', 'Musical', 'Day', 'Tobacco', 'Acupuncture', 'Hospitals', 'Tea', 'Toy', 'Accessories', 'Convenience', 'Jewelry', 'Watches', 'Peruvian', 'Latin', 'Shipping', 'Post', 'Apartments', 'Creperies', 'French', 'Leather', 'Taiwanese', 'Do_It_Yourself', 'Colleges', 'GunRifle', 'Guns', 'Horseback', 'Parks', 'Amateur', 'Baby', 'Computers', 'IT', 'Buffets', 'Windows', 'Skating', 'Southern', 'CajunCreole', 'Resorts', 'Amusement', 'Funeral', 'Recreation', 'Signmaking', 'Television', 'Soul', 'Adult', 'Photographers', 'Juice', 'Dance', 'Parking', 'Framing', 'Electricians', 'Weight', 'Caribbean', 'Cosmetic', 'Landscaping', 'Notaries', 'Pakistani', 'Yoga', 'Tax', 'Comic', 'Ethiopian', 'Jazz', 'Obstetricians', 'Airports', 'Personal', 'Ear', 'Podiatrists', 'Family', 'Urgent', 'Oral', 'Property', 'Elementary', 'Preschools', 'Divorce', 'Lawyers', 'PersianIranian', 'Hookah', 'Truck', 'Laser', 'Costumes', 'Employment', 'Medical', 'Radio', 'Swimwear', 'Martial', 'Hiking', 'Dermatologists', 'RV', 'Pilates', 'Taxis', 'Wedding', 'Bike', 'Lebanese', 'Self', 'Accountants', 'Boating', 'Plumbing', 'Windshield', 'Social', 'Towing', 'Interior', 'Spanish', 'Tree', 'Fruits', 'Beer', 'Cheesesteaks', 'Screen', 'Fish', 'Gardeners', 'Orthopedists', 'Carpet', 'Carpeting', 'Graphic', 'Child', 'Outlet', 'Life', 'Pawn', 'British', 'Makeup', 'Solar', 'Counseling', 'Kosher', 'Session', 'Cupcakes', 'Physical', 'Dog', 'Waxing', 'Eyelash', 'Festivals', 'Vegan', 'Couriers', 'Hawaiian', 'Internal', 'Cuban', 'Gastropubs', 'Watch', 'Wheel', 'Spray', 'Shades', 'Pediatricians', 'Garage', 'Pest', 'Vape', 'Diagnostic', 'Laboratory', 'Pediatric', 'Farmers', 'Airlines', 'Roofing', 'Playgrounds', 'Shaved', 'Insurance', 'Window', 'Endodontists', 'Departments', 'Gelato', 'Halal', 'Dim', 'Painters', 'Driving', 'Damage', 'Handyman', 'Nutritionists', 'Casinos', 'Web', 'Cosmetology', 'Mongolian', 'Permanent', 'Marketing', 'Criminal', 'Boot', 'Smog', 'Filipino', 'Hostels', 'Butcher', 'VideoFilm', 'Street', 'Szechuan', 'Wineries', 'African', 'Turkish', 'Boxing', 'NaturopathicHolistic', 'Boat', 'Modern', 'Blow', 'Brazilian', 'Brasseries', 'Bubble', 'Canadian', 'Scottish', 'Barre', 'Kebab', 'Yelp'};
predictors = datasetTable(:,predictorNames);
predictors = table2array(varfun(@double, predictors));
response = datasetTable.Rating3StarsOrHigher;
% Train a classifier
trainedClassifier = fitctree(predictors, response, 'PredictorNames', {'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday' 'Sunday' 'Doctors' 'Health' 'Nightlife' 'Active' 'Mini' 'Golf' 'Shopping' 'Home' 'Internet' 'Mobile' 'Professional' 'Electronics' 'Bars' 'American' 'Lounges' 'Restaurants' 'Auto' 'Automotive' 'Contractors' 'Burgers' 'Breakfast' 'Food' 'Grocery' 'Cafes' 'Hotels' 'Event' 'Pubs' 'Irish' 'Local' 'Sewing' 'Dentists' 'General' 'Chinese' 'Gyms' 'Trainers' 'Fitness' 'Italian' 'Periodontists' 'Orthodontists' 'Fast' 'Coffee' 'Arts' 'Knitting' 'Hobby' 'Department' 'Fashion' 'Body' 'Building' 'Hardware' 'Nurseries' 'Arcades' 'Breweries' 'Comedy' 'Videos' 'Books_' 'Bookstores' 'Swimming' 'Mattresses' 'Airport' 'Limos' 'Transportation' 'Pizza' 'Gluten_Free' 'Lingerie' 'Asian' 'Shoe' 'Soup' 'Sandwiches' 'Salad' 'Veterinarians' 'Pets' 'Men_s' 'Formal' 'Discount' 'Seafood' 'Women_s' 'Children_s' 'Sporting' 'Outdoor' 'Sports' 'Bikes' 'Thrift' 'Bakeries' 'Desserts' 'Caterers' 'Tattoo' 'Piercing' 'Beauty' 'Flowers' 'Florists' 'Nail' 'Hair' 'Ice' 'Movers' 'Antiques' 'Beer_' 'Pet' 'TapasSmall' 'Drugstores' 'Animal' 'Tires' 'Oil' 'Real' 'Barbeque' 'Furniture' 'Chiropractors' 'Performing' 'Keys' 'Security' 'Specialty' 'Education' 'Cooking' 'Travel' 'Libraries' 'Public' 'Music' 'Appliances' 'Art' 'Dry' 'Tennis' 'Wine' 'Mediterranean' 'Vegetarian' 'Portuguese' 'Museums' 'Landmarks' 'Skin' 'Banks' 'Financial' 'Mortgage' 'Diners' 'Motorcycle' 'Photography' 'German' 'Delis' 'Bed' 'Dive' 'Bistros' 'Cinema' 'Chicken' 'Barbers' 'Hot' 'Kids' 'Stadiums' 'Churches' 'Religious' 'Print' 'Mass' 'Meat' 'Party' 'Polish' 'Greek' 'Reflexology' 'DJs' 'Sushi' 'Japanese' 'Pool' 'Lighting' 'Heating' 'Indian' 'Bowling' 'Printing' 'Office' 'Bridal' 'Used_' 'Mexican' 'Tex_Mex' 'Gas' 'Kitchen' 'Bagels' 'Tours' 'Donuts' 'Flooring' 'Venues' 'Comfort' 'Tapas' 'Cocktail' 'Ethnic' 'Car' 'Wholesale' 'Cosmetics' 'Steakhouses' 'Optometrists' 'Ophthalmologists' 'Eyewear' 'Gay' 'Community' 'Luggage' 'Candy' 'Korean' 'Chocolatiers' 'Massage' 'Cards' 'Fabric' 'Cheese' 'Karaoke' 'Vietnamese' 'Thai' 'Vinyl' 'Newspapers' 'Tanning' 'Gift' 'Middle' 'Musical' 'Day' 'Tobacco' 'Acupuncture' 'Hospitals' 'Tea' 'Toy' 'Accessories' 'Convenience' 'Jewelry' 'Watches' 'Peruvian' 'Latin' 'Shipping' 'Post' 'Apartments' 'Creperies' 'French' 'Leather' 'Taiwanese' 'Do_It_Yourself' 'Colleges' 'GunRifle' 'Guns' 'Horseback' 'Parks' 'Amateur' 'Baby' 'Computers' 'IT' 'Buffets' 'Windows' 'Skating' 'Southern' 'CajunCreole' 'Resorts' 'Amusement' 'Funeral' 'Recreation' 'Signmaking' 'Television' 'Soul' 'Adult' 'Photographers' 'Juice' 'Dance' 'Parking' 'Framing' 'Electricians' 'Weight' 'Caribbean' 'Cosmetic' 'Landscaping' 'Notaries' 'Pakistani' 'Yoga' 'Tax' 'Comic' 'Ethiopian' 'Jazz' 'Obstetricians' 'Airports' 'Personal' 'Ear' 'Podiatrists' 'Family' 'Urgent' 'Oral' 'Property' 'Elementary' 'Preschools' 'Divorce' 'Lawyers' 'PersianIranian' 'Hookah' 'Truck' 'Laser' 'Costumes' 'Employment' 'Medical' 'Radio' 'Swimwear' 'Martial' 'Hiking' 'Dermatologists' 'RV' 'Pilates' 'Taxis' 'Wedding' 'Bike' 'Lebanese' 'Self' 'Accountants' 'Boating' 'Plumbing' 'Windshield' 'Social' 'Towing' 'Interior' 'Spanish' 'Tree' 'Fruits' 'Beer' 'Cheesesteaks' 'Screen' 'Fish' 'Gardeners' 'Orthopedists' 'Carpet' 'Carpeting' 'Graphic' 'Child' 'Outlet' 'Life' 'Pawn' 'British' 'Makeup' 'Solar' 'Counseling' 'Kosher' 'Session' 'Cupcakes' 'Physical' 'Dog' 'Waxing' 'Eyelash' 'Festivals' 'Vegan' 'Couriers' 'Hawaiian' 'Internal' 'Cuban' 'Gastropubs' 'Watch' 'Wheel' 'Spray' 'Shades' 'Pediatricians' 'Garage' 'Pest' 'Vape' 'Diagnostic' 'Laboratory' 'Pediatric' 'Farmers' 'Airlines' 'Roofing' 'Playgrounds' 'Shaved' 'Insurance' 'Window' 'Endodontists' 'Departments' 'Gelato' 'Halal' 'Dim' 'Painters' 'Driving' 'Damage' 'Handyman' 'Nutritionists' 'Casinos' 'Web' 'Cosmetology' 'Mongolian' 'Permanent' 'Marketing' 'Criminal' 'Boot' 'Smog' 'Filipino' 'Hostels' 'Butcher' 'VideoFilm' 'Street' 'Szechuan' 'Wineries' 'African' 'Turkish' 'Boxing' 'NaturopathicHolistic' 'Boat' 'Modern' 'Blow' 'Brazilian' 'Brasseries' 'Bubble' 'Canadian' 'Scottish' 'Barre' 'Kebab' 'Yelp'}, 'ResponseName', 'Rating3StarsOrHigher', 'ClassNames', [0 1], 'SplitCriterion', 'gdi', 'MaxNumSplits', 500, 'Surrogate', 'off');

% Perform cross-validation
partitionedModel = crossval(trainedClassifier, 'KFold', 5);

% Compute validation accuracy
validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');

%% Uncomment this section to compute validation predictions and scores:
% % Compute validation predictions and scores
% [validationPredictions, validationScores] = kfoldPredict(partitionedModel);